buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        dependencies {
            classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}"
        }
    }
}

apply plugin: 'idea'

bootJar { enabled = false }
jar { enabled = true }

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.data:spring-data-envers'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    implementation("com.querydsl:querydsl-sql:${queryDSLVersion}")
    implementation("com.querydsl:querydsl-sql-spring:${queryDSLVersion}")
    implementation("com.querydsl:querydsl-jpa:${queryDSLVersion}")

    runtimeOnly 'mysql:mysql-connector-java'
    implementation('com.h2database:h2:1.4.196')

    implementation project(':core')
}

def queryDslDir = "src/main/generated"
def queryDslOutput = file("${queryDslDir}")
sourceSets {
    main {
        java {
            srcDir queryDslDir
        }
    }
}

dependencies {
    implementation "com.querydsl:querydsl-jpa:${queryDSLVersion}"
    annotationProcessor(
            "javax.annotation:javax.annotation-api:1.3.2"
            , "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final"
    )
}

compileJava.doFirst {
    delete file("${queryDslDir}")
    ant.echo(message: "compileJava... we successully deleted files")
}

def gradleGeneratedDir = "./build/generated/source/apt"
def gradleQueryDslOutput = file("${gradleGeneratedDir}")

task cleanUpQueryDsl(type: Copy) {
    from "${gradleGeneratedDir}/main"
    into "${queryDslDir}"
    doLast {
        delete gradleQueryDslOutput
    }
}

compileJava.finalizedBy(cleanUpQueryDsl)

clean {
    delete gradleQueryDslOutput
    delete queryDslOutput
}